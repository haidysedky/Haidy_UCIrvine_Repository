##1A
SELECT 
FIRST_NAME,
LAST_NAME
FROM SAKILA.ACTOR;

##1B
SELECT 
FIRST_NAME,
LAST_NAME,
CONCAT(CONCAT(UPPER(FIRST_NAME)," "), UPPER(LAST_NAME)) AS "Actor Name"
FROM SAKILA.ACTOR;

##2A
SELECT  ACTOR_ID, FIRST_NAME, LAST_NAME
FROM SAKILA.ACTOR
WHERE UPPER(FIRST_NAME) = 'JOE';

##2B
SELECT *
FROM SAKILA.ACTOR
WHERE UPPER(LAST_NAME) LIKE '%GEN%';

##2C
SELECT *
FROM SAKILA.ACTOR
WHERE UPPER(LAST_NAME) LIKE '%LI%'
ORDER BY LAST_NAME, FIRST_NAME;

##2D
SELECT COUNTRY_ID, COUNTRY
FROM SAKILA.COUNTRY
WHERE UPPER(COUNTRY) IN ('AFGHANISTAN', 'BANGLADESH', 'CHINA');

##3A
ALTER TABLE SAKILA.ACTOR
ADD COLUMN description BLOB;
#SELECT * FROM SAKILA.ACTOR;

##3B
ALTER TABLE SAKILA.ACTOR
DROP COLUMN description;
#SHOW FIELDS FROM SAKILA.ACTOR;

##4A
SELECT 
LAST_NAME,
COUNT(ACTOR_ID) AS NUMBER_OF_ACTORS ## CAN CODE IT AS COUNT(*) AS WELL
FROM SAKILA.ACTOR
GROUP BY LAST_NAME;

##TO CHECK UNIQUNESS OF ACTOR_ID IN ACTOR TABLE
#SELECT ACTOR_ID, COUNT(*) FROM SAKILA.ACTOR GROUP BY ACTOR_ID HAVING COUNT(*) > 1;
#SHOW FIELDS FROM SAKILA.ACTOR;

##4B
SELECT 
LAST_NAME,
COUNT(ACTOR_ID) AS NUMBER_OF_ACTORS ## CAN CODE IT AS COUNT(*) AS WELL
FROM SAKILA.ACTOR
GROUP BY LAST_NAME
HAVING COUNT(ACTOR_ID) >=2;

##4C
SELECT * 
FROM SAKILA.ACTOR
WHERE FIRST_NAME = 'GROUCHO'
AND LAST_NAME = 'WILLIAMS';

UPDATE SAKILA.ACTOR
SET FIRST_NAME = 'HARPO'
WHERE FIRST_NAME = 'GROUCHO'
AND LAST_NAME = 'WILLIAMS'; ## OR WE CAN USE THE ACTOR_ID = 172 INSTEAD OF FIRST_NAME AND LAST_NAME

##4D
SELECT * 
FROM SAKILA.ACTOR
WHERE FIRST_NAME = 'HARPO';

SET SQL_SAFE_UPDATES=0;

UPDATE SAKILA.ACTOR
SET FIRST_NAME = 'GROUCHO'
WHERE FIRST_NAME = 'HARPO';

##5A
SHOW CREATE TABLE ADDRESS;

##6A
##SHOW FIELDS FROM SAKILA.STAFF
SELECT 
S.FIRST_NAME, 
S.LAST_NAME,
A.ADDRESS
FROM 
SAKILA.STAFF S INNER JOIN
SAKILA.ADDRESS A ON S.ADDRESS_ID = A.ADDRESS_ID;

##6B
SELECT 
S.FIRST_NAME,
S.LAST_NAME,
SUM(AMOUNT) AS TOTAL_AMOUNT
FROM SAKILA.STAFF S INNER JOIN
SAKILA.PAYMENT P ON S.STAFF_ID = P.STAFF_ID
WHERE 
DATE(PAYMENT_DATE) BETWEEN '2005-08-01' AND '2005-08-31' 
GROUP BY
S.FIRST_NAME,
S.LAST_NAME;

##6C
SELECT 
F.TITLE AS FILM,
COUNT(A.ACTOR_ID) AS NUMBER_OF_ACTORS
FROM SAKILA.FILM F INNER JOIN
SAKILA.FILM_ACTOR A ON F.FILM_ID = A.FILM_ID
GROUP BY
F.TITLE;

##6D
SELECT 
COUNT(INVENTORY_ID) AS FILM_COPIES 
FROM 
SAKILA.FILM F INNER JOIN
SAKILA.INVENTORY I ON F.FILM_ID = I.FILM_ID
WHERE UPPER(TITLE) = 'HUNCHBACK IMPOSSIBLE';

##6E
SELECT 
C.FIRST_NAME,
C.LAST_NAME,
SUM(P.AMOUNT) AS "TOTAL AMOUNT PAID"
FROM SAKILA.CUSTOMER C LEFT JOIN
SAKILA.PAYMENT P ON C.CUSTOMER_ID = P.CUSTOMER_ID
GROUP BY
C.FIRST_NAME,
C.LAST_NAME
ORDER BY
C.LAST_NAME;

##7A
SELECT 
F.TITLE
FROM 
SAKILA.FILM F 
WHERE 
F.LANGUAGE_ID IN ( SELECT LANGUAGE_ID FROM LANGUAGE WHERE NAME= 'English') AND
(UPPER(F.TITLE) LIKE 'Q%' OR UPPER(F.TITLE) LIKE 'K%');

##7B
SELECT 
A.FIRST_NAME,
A.LAST_NAME
FROM SAKILA.FILM_ACTOR F INNER JOIN
SAKILA.ACTOR A ON F.ACTOR_ID = A.ACTOR_ID 
WHERE FILM_ID = (SELECT FILM_ID FROM SAKILA.FILM WHERE UPPER(TITLE) = 'ALONE TRIP');

##ANOTHER APPROACH
SELECT
A.FIRST_NAME,
A.LAST_NAME
FROM SAKILA.ACTOR A
WHERE 
A.ACTOR_ID IN (SELECT ACTOR_ID FROM SAKILA.FILM_ACTOR WHERE FILM_ID IN 
					(SELECT FILM_ID FROM SAKILA.FILM WHERE UPPER(TITLE) = 'ALONE TRIP')
			   )
;

##7C
SELECT 
R.FIRST_NAME,
R.LAST_NAME,
R.EMAIL
FROM 
SAKILA.CUSTOMER R INNER JOIN
SAKILA.ADDRESS A ON R.ADDRESS_ID = A.ADDRESS_ID INNER JOIN 
SAKILA.CITY I ON A.CITY_ID = I.CITY_ID INNER JOIN 
SAKILA.COUNTRY C ON I.COUNTRY_ID = C.COUNTRY_ID 
WHERE UPPER(C.COUNTRY) = 'CANADA';

##7D
SELECT 
F.TITLE
FROM 
SAKILA.FILM F INNER JOIN
SAKILA.FILM_CATEGORY C ON F.FILM_ID = C.FILM_ID
WHERE CATEGORY_ID IN (SELECT CATEGORY_ID FROM SAKILA.CATEGORY WHERE NAME = 'Family');

##7E
SELECT 
F.TITLE,
COUNT(RENTAL_ID) AS NUMBER_RENTED
FROM 
SAKILA.FILM F INNER JOIN
SAKILA.INVENTORY I ON F.FILM_ID = I.FILM_ID INNER JOIN
SAKILA.RENTAL R ON I.INVENTORY_ID = R.INVENTORY_ID
GROUP BY 
F.TITLE 
ORDER BY COUNT(RENTAL_ID) DESC;

##7F
SELECT 
S.STORE_ID,
A.ADDRESS,
A.ADDRESS2,
A.DISTRICT,
C.CITY,
R.COUNTRY,
A.POSTAL_CODE,
SUM(P.AMOUNT) AS 'TOTAL BUSINESS IN DOLLARS'
FROM SAKILA.PAYMENT P INNER JOIN
SAKILA.STAFF S ON P.STAFF_ID = S.STAFF_ID INNER JOIN
SAKILA.STORE E ON S.STORE_ID = E.STORE_ID INNER JOIN
SAKILA.ADDRESS A ON E.ADDRESS_ID = A.ADDRESS_ID INNER JOIN
SAKILA.CITY C ON A.CITY_ID = C.CITY_ID INNER JOIN
SAKILA.COUNTRY R ON C.COUNTRY_ID = R.COUNTRY_ID 
GROUP BY 
S.STORE_ID,
A.ADDRESS,
A.ADDRESS2,
A.DISTRICT,
C.CITY,
R.COUNTRY,
A.POSTAL_CODE;

##7G
SELECT 
S.STORE_ID,
C.CITY,
R.COUNTRY
FROM SAKILA.STORE S INNER JOIN
SAKILA.ADDRESS A ON S.ADDRESS_ID = A.ADDRESS_ID INNER JOIN
SAKILA.CITY C ON A.CITY_ID = C.CITY_ID INNER JOIN
SAKILA.COUNTRY R ON C.COUNTRY_ID = R.COUNTRY_ID ;

##7H
SELECT 
C.NAME AS CATEGORY,
SUM(P.AMOUNT) AS 'GROSS REVENUE'
FROM 
SAKILA.CATEGORY C INNER JOIN
SAKILA.FILM_CATEGORY F ON C.CATEGORY_ID = F.CATEGORY_ID INNER JOIN 
SAKILA.INVENTORY I ON F.FILM_ID = I.FILM_ID INNER JOIN
SAKILA.RENTAL R ON I.INVENTORY_ID = R.INVENTORY_ID INNER JOIN
SAKILA.PAYMENT P ON R.RENTAL_ID = P.RENTAL_ID 
GROUP BY
C.NAME
ORDER BY SUM(P.AMOUNT) DESC
LIMIT 5
;

##8A
CREATE VIEW SAKILA.TOP_FIVE_GENRES AS
SELECT 
C.NAME AS CATEGORY,
SUM(P.AMOUNT) AS 'GROSS REVENUE'
FROM 
SAKILA.CATEGORY C INNER JOIN
SAKILA.FILM_CATEGORY F ON C.CATEGORY_ID = F.CATEGORY_ID INNER JOIN 
SAKILA.INVENTORY I ON F.FILM_ID = I.FILM_ID INNER JOIN
SAKILA.RENTAL R ON I.INVENTORY_ID = R.INVENTORY_ID INNER JOIN
SAKILA.PAYMENT P ON R.RENTAL_ID = P.RENTAL_ID 
GROUP BY
C.NAME
ORDER BY SUM(P.AMOUNT) DESC
LIMIT 5
;

##8B
##IF THE QUESTION MEANT THE DATA RESULTS FROM THAT VIEW
SELECT * FROM SAKILA.TOP_FIVE_GENRES;
##IF THE QUESTION MEANT THE QUERY USED TO CREATE THAT CREATE VIEW 
SHOW CREATE VIEW SAKILA.TOP_FIVE_GENRES;

##8C
DROP VIEW SAKILA.TOP_FIVE_GENRES;